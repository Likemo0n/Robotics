/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Start;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author SAMPP
 */
public class Main extends javax.swing.JFrame implements Runnable {

    ObjectOutputStream oos;
    ObjectInputStream ois;
    Socket socket;

    Thread show = new Thread(this);
    boolean showEnable=false;
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        setLocationRelativeTo(null);

        back.setEnabled(false);
        forward.setEnabled(false);
        handDown.setEnabled(false);
        handUp.setEnabled(false);
        left.setEnabled(false);
        right.setEnabled(false);
        hold.setEnabled(false);
        release.setEnabled(false);

        reconnect.setEnabled(true);

        show.start();
    }

    public void reject() {
        try {
            back.setEnabled(false);
            forward.setEnabled(false);
            handDown.setEnabled(false);
            handUp.setEnabled(false);
            left.setEnabled(false);
            right.setEnabled(false);
            hold.setEnabled(false);
            release.setEnabled(false);

            reconnect.setEnabled(true);

            socket.close();
            oos.close();
            ois.close();

        } catch (Exception ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "cant connect", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }

    }

    public void connect(int port, String ip) {

        try {
            socket = new Socket(ip, port);
            oos = new ObjectOutputStream(socket.getOutputStream());
            ois = new ObjectInputStream(socket.getInputStream());

            back.setEnabled(true);
            forward.setEnabled(true);
            handDown.setEnabled(true);
            handUp.setEnabled(true);
            left.setEnabled(true);
            right.setEnabled(true);
            hold.setEnabled(true);
            release.setEnabled(true);

            reconnect.setEnabled(false);
        } catch (IOException ex) {
            reject();
            //System.exit(0);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        forward = new javax.swing.JButton();
        back = new javax.swing.JButton();
        right = new javax.swing.JButton();
        left = new javax.swing.JButton();
        handUp = new javax.swing.JButton();
        handDown = new javax.swing.JButton();
        hold = new javax.swing.JButton();
        release = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        reconnect = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        forward.setText("forward");
        forward.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                forwardMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                forwardMouseReleased(evt);
            }
        });
        forward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardActionPerformed(evt);
            }
        });

        back.setText("back");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                backMouseReleased(evt);
            }
        });

        right.setText("righ");
        right.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rightMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rightMouseReleased(evt);
            }
        });

        left.setText("left");
        left.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                leftMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                leftMouseReleased(evt);
            }
        });

        handUp.setText("hand Up");
        handUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                handUpMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                handUpMouseReleased(evt);
            }
        });

        handDown.setText("han down");
        handDown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                handDownMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                handDownMouseReleased(evt);
            }
        });

        hold.setText("hold");
        hold.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                holdMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                holdMouseReleased(evt);
            }
        });

        release.setText("release");
        release.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                releaseMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                releaseMouseReleased(evt);
            }
        });

        jTextField1.setText("192.168.1.5");

        jLabel1.setText("IP");

        reconnect.setText("reconnect");
        reconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reconnectActionPerformed(evt);
            }
        });

        jToggleButton1.setText("show");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 2, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(hold, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(release, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(handUp, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(handDown, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(left)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(forward, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(right))))
                                        .addGap(27, 27, 27))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField1)
                                        .addContainerGap())))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(reconnect)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reconnect)
                        .addGap(80, 80, 80)
                        .addComponent(jToggleButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hold)
                            .addComponent(release))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(handUp)
                            .addComponent(handDown))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(forward)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(back)
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(right)
                                .addGap(44, 44, 44))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(left)
                                .addGap(44, 44, 44))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void forwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardActionPerformed


    }//GEN-LAST:event_forwardActionPerformed

    private void forwardMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forwardMousePressed
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("forward");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_forwardMousePressed

    private void forwardMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forwardMouseReleased
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("stop");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_forwardMouseReleased

    private void reconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reconnectActionPerformed
        // TODO add your handling code here:
        connect(52242, jTextField1.getText());

    }//GEN-LAST:event_reconnectActionPerformed

    private void backMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMousePressed
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("back");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_backMousePressed

    private void backMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseReleased
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("stop");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_backMouseReleased

    private void leftMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftMousePressed
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("left");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_leftMousePressed

    private void leftMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftMouseReleased
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("stop");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_leftMouseReleased

    private void rightMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rightMousePressed
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("right");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_rightMousePressed

    private void rightMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rightMouseReleased
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("stop");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_rightMouseReleased

    private void handUpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handUpMousePressed
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("handUp");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_handUpMousePressed

    private void handUpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handUpMouseReleased
        // TODO add your handling code here:
//        try {
//            // TODO add your handling code here:
//
//            oos.writeObject("stop");
//        } catch (IOException ex) {
//            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
//            reject();
//        }
    }//GEN-LAST:event_handUpMouseReleased

    private void handDownMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handDownMousePressed
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("handDown");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_handDownMousePressed

    private void handDownMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handDownMouseReleased
        // TODO add your handling code here:
//        try {
//            // TODO add your handling code here:
//
//            oos.writeObject("stop");
//        } catch (IOException ex) {
//            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
//            reject();
//        }
    }//GEN-LAST:event_handDownMouseReleased

    private void holdMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_holdMousePressed
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("hold");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_holdMousePressed

    private void holdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_holdMouseReleased
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("stop");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_holdMouseReleased

    private void releaseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_releaseMousePressed
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("release");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_releaseMousePressed

    private void releaseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_releaseMouseReleased
        // TODO add your handling code here:
        showEnable=false;
        try {
            // TODO add your handling code here:

            oos.writeObject("stop");
        } catch (IOException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            reject();
        }
        showEnable=jToggleButton1.isSelected();
    }//GEN-LAST:event_releaseMouseReleased

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    @Override
    public void run() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.

        while (true) {

            if (showEnable) {
                try {
                    // TODO add your handling code here:

                    oos.writeObject("get picture");
                    ImageIcon im = (ImageIcon) ois.readObject();
                    jLabel2.setIcon(im);
                    setVisible(true);
                } catch (Exception ex) {
                    //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    reject();
                }
            }
            try {
                show.sleep(50);
            } catch (Exception e) {
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton forward;
    private javax.swing.JButton handDown;
    private javax.swing.JButton handUp;
    private javax.swing.JButton hold;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton left;
    private javax.swing.JButton reconnect;
    private javax.swing.JButton release;
    private javax.swing.JButton right;
    // End of variables declaration//GEN-END:variables
}
